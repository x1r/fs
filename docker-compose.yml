services:
  db:
    image: postgres
    restart: on-failure
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: students_db
    volumes:
      - ./db:/var/lib/postgresql/data

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    volumes:
      - ./backend/app:/app/app
    depends_on:
      - db
    restart: on-failure
    environment:
      - WATCHFILES_FORCE_POLLING=true


  frontend:
    platform: "linux/amd64"
    build:
      context: ./frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CLIENTVAR: "clientvar"
    working_dir: /app
    image: t3-app
    environment:
      - DATABASE_URL=postgresql://postgres:password@db:5432/students_db
      - NEXTAUTH_SECRET=OTI0MjQyMzY5OTg1OTc4Njk5MTkxNDc1OTI5OTQzNTI2NjU1NDAwNTM1NTQ2Mjc3MjExNzgwMDE3MDc1OTQ2MDIxMjMzOTY0NzA5ODQ=
      - NEXTAUTH_URL=http://backend:8000/
      - WATCHFILES_FORCE_POLLING=true


  nginx:
    image: nginx:latest
    ports:
      - "80:80"
      - "3000:3000"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./frontend:/var/www/frontend
    depends_on:
      - backend


volumes:
  db:
